@use "sass:map";
@use "@styles/abstracts/colors/palette";
@use "@styles/abstracts/font/sizes" as font-sizes;
@use "@styles/abstracts/mixins/font-size";
@use "@styles/abstracts/mixins/display";
@use "@styles/abstracts/mixins/gradient-border";
@use "@styles/abstracts/functions/gradient" as createGradient;

@mixin card-border($gradient) {
    @include gradient-border.gradient-border($gradient: $gradient, $time: 1000, $border-radius: 7);
}

.card {
    @include display.flex($justify: space-evenly);
    aspect-ratio: 2;
    padding: 10px;
    border-radius: 10px;
    @include card-border(linear-gradient(135deg, palette.$white, palette.$secondary));
    background-size: 150% 150%;
    transition: 400ms;
    transition-timing-function: ease-out;

    &.tent {
        animation-delay: 500ms;
    }
    &.tower {
        animation-delay: 1s;
    }

    &:hover {
        &.battle {
            @include card-border(createGradient.linearGradient(palette.$grass));
        }
        &.tent {
            @include card-border(createGradient.linearGradient(palette.$fire));
        }
        &.tower {
            @include card-border(createGradient.linearGradient(palette.$water));
        }
    }

    .icon {
        width: 50px;
        height: 50px;
        object-fit: contain;
    }

    .text-container {
        width: 70%;
        
        .sub-title {
            color: palette.$white;
            @include font-size.set-font-size(font-sizes.$heading, "small");
            font-weight: 600;
        }
        .description {
            color: palette.$secondary-white;
            @include font-size.set-font-size(font-sizes.$text, "small");
        }
    }

    @media (orientation: landscape) {
        flex-direction: column;
        width: 30%;

        .icon {
            width: min(10vh, 80px);
            height: min(10vh, 80px);
        }

        .text-container {
            width: 95%;
        }
    }

    @media (orientation: landscape) and (min-width: 1000px) {
        aspect-ratio: 1.25;
    }
}